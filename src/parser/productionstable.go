// Code generated by gocc; DO NOT EDIT.

package parser

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String:     `S' : Program	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Program : ProgramName VarDeclarationSection FunctionListOpt MainSection	<<  >>`,
		Id:         "Program",
		NTType:     1,
		Index:      1,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ProgramName : kwdProgram id terminator	<<  >>`,
		Id:         "ProgramName",
		NTType:     2,
		Index:      2,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `VarDeclarationSection : empty	<<  >>`,
		Id:         "VarDeclarationSection",
		NTType:     3,
		Index:      3,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String:     `VarDeclarationSection : VarDeclaration VarDeclarationSection	<<  >>`,
		Id:         "VarDeclarationSection",
		NTType:     3,
		Index:      4,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `VarDeclaration : kwdVars VarList typeAssignOp type terminator	<<  >>`,
		Id:         "VarDeclaration",
		NTType:     4,
		Index:      5,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `VarList : id	<<  >>`,
		Id:         "VarList",
		NTType:     5,
		Index:      6,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `VarList : VarList repeatTerminator id	<<  >>`,
		Id:         "VarList",
		NTType:     5,
		Index:      7,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `FunctionListOpt : FunctionList	<<  >>`,
		Id:         "FunctionListOpt",
		NTType:     6,
		Index:      8,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `FunctionListOpt : empty	<<  >>`,
		Id:         "FunctionListOpt",
		NTType:     6,
		Index:      9,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String:     `FunctionList : Function	<<  >>`,
		Id:         "FunctionList",
		NTType:     7,
		Index:      10,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `FunctionList : FunctionList Function	<<  >>`,
		Id:         "FunctionList",
		NTType:     7,
		Index:      11,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Function : kwdFunc id openParan ParameterList closeParan Block terminator	<<  >>`,
		Id:         "Function",
		NTType:     8,
		Index:      12,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Block : openBrace StatementList closeBrace	<<  >>`,
		Id:         "Block",
		NTType:     9,
		Index:      13,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ParameterList : Parameter	<<  >>`,
		Id:         "ParameterList",
		NTType:     10,
		Index:      14,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ParameterList : ParameterList repeatTerminator Parameter	<<  >>`,
		Id:         "ParameterList",
		NTType:     10,
		Index:      15,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ParameterList : empty	<<  >>`,
		Id:         "ParameterList",
		NTType:     10,
		Index:      16,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String:     `Parameter : id typeAssignOp type	<<  >>`,
		Id:         "Parameter",
		NTType:     11,
		Index:      17,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `MainSection : kwdBegin StatementList kwdEnd	<<  >>`,
		Id:         "MainSection",
		NTType:     12,
		Index:      18,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `StatementList : Statement	<<  >>`,
		Id:         "StatementList",
		NTType:     13,
		Index:      19,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `StatementList : StatementList Statement	<<  >>`,
		Id:         "StatementList",
		NTType:     13,
		Index:      20,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Statement : IfStatement	<<  >>`,
		Id:         "Statement",
		NTType:     14,
		Index:      21,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Statement : PrintStatement terminator	<<  >>`,
		Id:         "Statement",
		NTType:     14,
		Index:      22,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Statement : Assignment terminator	<<  >>`,
		Id:         "Statement",
		NTType:     14,
		Index:      23,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Statement : FunctionCall terminator	<<  >>`,
		Id:         "Statement",
		NTType:     14,
		Index:      24,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Statement : WhileStatement	<<  >>`,
		Id:         "Statement",
		NTType:     14,
		Index:      25,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `IfStatement : SimpleIfStatement	<<  >>`,
		Id:         "IfStatement",
		NTType:     15,
		Index:      26,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `IfStatement : IfElseStatement	<<  >>`,
		Id:         "IfStatement",
		NTType:     15,
		Index:      27,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `SimpleIfStatement : kwdIf openParan Expression closeParan Block	<<  >>`,
		Id:         "SimpleIfStatement",
		NTType:     16,
		Index:      28,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `IfElseStatement : kwdIf openParan Expression closeParan Block kwdElse Block	<<  >>`,
		Id:         "IfElseStatement",
		NTType:     17,
		Index:      29,
		NumSymbols: 7,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `WhileStatement : kwdWhile openParan Expression closeParan Block	<<  >>`,
		Id:         "WhileStatement",
		NTType:     18,
		Index:      30,
		NumSymbols: 5,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `PrintStatement : kwdPrint openParan PrintList closeParan	<<  >>`,
		Id:         "PrintStatement",
		NTType:     19,
		Index:      31,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `PrintList : PrintItem	<<  >>`,
		Id:         "PrintList",
		NTType:     20,
		Index:      32,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `PrintList : PrintList repeatTerminator PrintItem	<<  >>`,
		Id:         "PrintList",
		NTType:     20,
		Index:      33,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `PrintItem : Expression	<<  >>`,
		Id:         "PrintItem",
		NTType:     21,
		Index:      34,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `PrintItem : stringLit	<<  >>`,
		Id:         "PrintItem",
		NTType:     21,
		Index:      35,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Assignment : id assignOp Expression	<<  >>`,
		Id:         "Assignment",
		NTType:     22,
		Index:      36,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `FunctionCall : id openParan ArgumentList closeParan	<<  >>`,
		Id:         "FunctionCall",
		NTType:     23,
		Index:      37,
		NumSymbols: 4,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ArgumentList : Expression	<<  >>`,
		Id:         "ArgumentList",
		NTType:     24,
		Index:      38,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ArgumentList : ArgumentList repeatTerminator Expression	<<  >>`,
		Id:         "ArgumentList",
		NTType:     24,
		Index:      39,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `ArgumentList : empty	<<  >>`,
		Id:         "ArgumentList",
		NTType:     24,
		Index:      40,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return nil, nil
		},
	},
	ProdTabEntry{
		String:     `Expression : Exp	<<  >>`,
		Id:         "Expression",
		NTType:     25,
		Index:      41,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Expression : Exp relOp Exp	<<  >>`,
		Id:         "Expression",
		NTType:     25,
		Index:      42,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Exp : Term	<<  >>`,
		Id:         "Exp",
		NTType:     26,
		Index:      43,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Exp : Term expressionOp Exp	<<  >>`,
		Id:         "Exp",
		NTType:     26,
		Index:      44,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Term : Factor	<<  >>`,
		Id:         "Term",
		NTType:     27,
		Index:      45,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Term : Term termOp Factor	<<  >>`,
		Id:         "Term",
		NTType:     27,
		Index:      46,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : openParan Expression closeParan	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      47,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : expressionOp id	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      48,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : expressionOp intLit	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      49,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : expressionOp floatLit	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      50,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : id	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      51,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : intLit	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      52,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String:     `Factor : floatLit	<<  >>`,
		Id:         "Factor",
		NTType:     28,
		Index:      53,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
}
